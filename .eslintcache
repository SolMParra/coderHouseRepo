[{"/Users/sparra/Desktop/solproyect-app/src/index.js":"1","/Users/sparra/Desktop/solproyect-app/src/App.js":"2","/Users/sparra/Desktop/solproyect-app/src/store/index.js":"3","/Users/sparra/Desktop/solproyect-app/src/Components/Cart/Cart.jsx":"4","/Users/sparra/Desktop/solproyect-app/src/Components/Checkout/Checkout.jsx":"5","/Users/sparra/Desktop/solproyect-app/src/firebase/index.js":"6","/Users/sparra/Desktop/solproyect-app/src/Components/ItemDetailContainer/ItemDetailContainer.jsx":"7","/Users/sparra/Desktop/solproyect-app/src/Components/NavBar/Navbar.jsx":"8","/Users/sparra/Desktop/solproyect-app/src/Components/ListProdHome/listadoProdHome.jsx":"9","/Users/sparra/Desktop/solproyect-app/src/Components/Global/carro.jsx":"10","/Users/sparra/Desktop/solproyect-app/src/Components/ItemList/itemList.jsx":"11","/Users/sparra/Desktop/solproyect-app/src/Components/Product/producto.jsx":"12","/Users/sparra/Desktop/solproyect-app/src/Components/ItemCount/ItemCount.jsx":"13","/Users/sparra/Desktop/solproyect-app/src/Components/WidgetCart/WidgetCart.jsx":"14","/Users/sparra/Desktop/solproyect-app/src/Components/ItemDetail/itemDetail.jsx":"15"},{"size":433,"mtime":1637264933599,"results":"16","hashOfConfig":"17"},{"size":1590,"mtime":1637267326456,"results":"18","hashOfConfig":"17"},{"size":75,"mtime":1637263096447,"results":"19","hashOfConfig":"17"},{"size":3595,"mtime":1637260093217,"results":"20","hashOfConfig":"17"},{"size":4667,"mtime":1637261154586,"results":"21","hashOfConfig":"17"},{"size":538,"mtime":1637264183827,"results":"22","hashOfConfig":"17"},{"size":2905,"mtime":1637266218804,"results":"23","hashOfConfig":"17"},{"size":3443,"mtime":1637279832242,"results":"24","hashOfConfig":"17"},{"size":411,"mtime":1637265872705,"results":"25","hashOfConfig":"17"},{"size":888,"mtime":1637266166388,"results":"26","hashOfConfig":"17"},{"size":4629,"mtime":1637280569020,"results":"27","hashOfConfig":"17"},{"size":1543,"mtime":1637266111702,"results":"28","hashOfConfig":"17"},{"size":594,"mtime":1637260471100,"results":"29","hashOfConfig":"17"},{"size":3706,"mtime":1637262070031,"results":"30","hashOfConfig":"17"},{"size":4653,"mtime":1637261222214,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"ynvlmj",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"34"},"/Users/sparra/Desktop/solproyect-app/src/index.js",[],["71","72"],"/Users/sparra/Desktop/solproyect-app/src/App.js",[],"/Users/sparra/Desktop/solproyect-app/src/store/index.js",[],"/Users/sparra/Desktop/solproyect-app/src/Components/Cart/Cart.jsx",["73","74","75"],"import {useContext, useState} from 'react';\nimport {Store} from '../../store';\nimport {Link } from 'react-router-dom';\n\nconst Cart = () =>{\n\n    const [data,setData] = useContext(Store);\n    const [total, setTotal] = useState(0);\n\n    console.log(data);\n\n    const eliminarItem = (id) => {\n\n        //antes de eliminar guardo la cantidad del producto en el carro\n        const cantidadEliminada = data.items[id].item.cantidadEnCarro;\n        //elimino el item del array \n        data.items.splice(id,1);\n        // seteo la cantidad (le resto la cantidad eliminada del item) y recupero el carro nuevamente\n        setData({\n            ...data,\n            cantidad: data.cantidad - cantidadEliminada,\n            items: [...data.items]\n        });\n\n    }\n\n    const totalCarro = (data) => {\n\n        // const reducer = (accumulator, currentValue) => accumulator + currentValue;\n        let total = 0;\n        let totalFila = 0;\n\n        // 1 + 2 + 3 + 4\n        if(data.items.length>0){\n        // console.log(data.items.reduce(reducer));\n            data.items.map(data=>{\n                totalFila = data.item.precio * data.item.cantidadEnCarro;\n                total = total + totalFila;\n            });\n        }\n\n\n        return total;\n\n    }\n\n    \n\n    return (\n        <>\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-12 text-center mt-3 mb-4\">\n                    <h3>Carro de compras</h3>\n                </div>\n            </div>\n            <div className=\"row\">\n                <table className=\"table table-hover\">\n                <thead>\n                    <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Item</th>\n                    <th scope=\"col\">Cantidad</th>\n                    <th scope=\"col\">Precio</th>\n                    <th scope=\"col\">Precio total</th>\n                    <th scope=\"col\">Accion</th>\n                    </tr>\n                </thead>\n                <tbody>\n                {\n                    data.items.length > 0 ? \n                    data.items.map((item,index) => \n                        <tr>\n                        <th scope=\"row\">{index+1}</th>\n                        <td>{item.item.titulo}</td>\n                        <td>{item.item.cantidadEnCarro}</td>\n                        <td>{item.item.precio}</td>\n                        <td>{item.item.precio*item.item.cantidadEnCarro}</td>\n                        <td><button onClick={() => eliminarItem(index)} className=\"btn btn-outline-danger btn-sm\">X</button></td>\n                        </tr>\n                    )\n                    :\n\n                    <tr><th scope=\"row\" colSpan=\"6\" className=\"text-center sinProductos\" >No hay productos en el carro.<Link className=\"btn btn-info btn-sm ml-3\" to={'/'}>ir a Inicio</Link></th></tr>\n\n\n                }\n                </tbody>\n                </table>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-12\">\n                <span className=\"float-right ml-2\" style={{color:'red'}}> {totalCarro(data)}</span><span className=\"float-right\" style={{color:'black'}}>Total Carro:</span>\n                </div>\n            </div>\n            {\n                    data.items.length > 0 ? \n            <div className=\"row\">\n                <div className=\"col-12\">\n                <Link to={'/checkout'} className=\"btn btn-info\">Finalizar Compra!</Link>\n                </div>\n            </div> : ''\n            }                \n        </div>\n        \n\n        </>\n    );\n}\n\nexport default Cart;","/Users/sparra/Desktop/solproyect-app/src/Components/Checkout/Checkout.jsx",["76","77"],"import {useContext, useState} from 'react';\nimport {Store} from '../../store';\nimport {getFirestore, getFirebase} from '../../firebase';\nimport firebase from 'firebase/app';\n\nconst Checkout = () => {\n\n    const db = getFirestore();\n    const app = getFirebase();\n    const [data, setData] = useContext(Store);\n    const [venta,ventaCompleta] = useState(false);\n    const [compraId,setcompraId] = useState(0);\n    const [formData, setFormData] = useState({\n        nombre: '',\n        apellido: '',\n        email: '',\n        tel: '',\n    });\n\n    const totalCarro = (data) => {\n\n        // const reducer = (accumulator, currentValue) => accumulator + currentValue;\n        let total = 0;\n        let totalFila = 0;\n\n        // 1 + 2 + 3 + 4\n        if(data.items.length>0){\n        // console.log(data.items.reduce(reducer));\n            data.items.map(data=>{\n                totalFila = data.item.precio * data.item.cantidadEnCarro;\n                total = total + totalFila;\n            });\n        }\n\n\n        return total;\n\n    }    \n\n    const compra = {\n        user : formData,\n        items: data.items,\n        date: firebase.firestore.Timestamp.fromDate(new Date()),\n        totalCarro: totalCarro(data)\n    };\n\n    console.log(data);\n\n    const handleChangeInput = (e) => {\n\n        setFormData({...formData, [e.target.name]: e.target.value});\n    }\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n        db.collection('ventas').add(compra)\n        .then(({id})=>{\n\n            eliminarTodos();\n            ventaCompleta(true);\n            setcompraId(id);\n        })\n        .catch(e => console.log(e))\n    }\n\n    const eliminarTodos = () => {\n        data.items.length = 0;\n        setData({\n            items: [],\n            cantidad: 0,           \n        });\n    }\n\n    return ( <>\n\n            <div className=\"container\">\n                <div className=\"row\">\n                        <div className=\"col-6\">\n                            <h3 className=\"mt-3 mb-3\">Formulario de pago</h3>\n                            {\n                                !venta ?\n                            \n                                <form onSubmit={handleSubmitForm}>\n                                    <div className=\"form-group\">\n                                        <input type=\"text\" required className=\"form-control\" name=\"nombre\" value={formData.nombre} onChange={handleChangeInput} id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Nombre\"/>\n                                        {/* <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small> */}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input type=\"text\" required className=\"form-control\" name=\"apellido\" value={formData.apellido} onChange={handleChangeInput} id=\"exampleInputPassword1\" placeholder=\"Apellido\"/>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input type=\"text\" required className=\"form-control\" name=\"email\" value={formData.email} onChange={handleChangeInput} id=\"exampleInputPassword1\" placeholder=\"Email\"/>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input type=\"text\" required className=\"form-control\" name=\"tel\" value={formData.tel} onChange={handleChangeInput} id=\"exampleInputPassword1\" placeholder=\"Telefono\"/>\n                                    </div>                                                        \n                                    {/* <div className=\"form-check\">\n                                        <input type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\"/>\n                                        <label className=\"form-check-label\" for=\"exampleCheck1\">Check me out</label>\n                                    </div>\n                                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button> */}\n                                    <button disabled={[formData.nombre, formData.apellido, formData.email, formData.tel].includes('')} type=\"submit\" className=\"btn btn-secondary btn-sm btn-block\">Pagar</button>\n                                </form>\n                                :\n                                <p>Compra exitosa, numero de seguimiento {compraId}</p>\n                        }   \n\n                        </div>\n                </div>\n            </div>\n    \n    </> );\n}\n \nexport default Checkout;","/Users/sparra/Desktop/solproyect-app/src/firebase/index.js",[],"/Users/sparra/Desktop/solproyect-app/src/Components/ItemDetailContainer/ItemDetailContainer.jsx",["78","79","80"],"import ItemDetail from '../ItemDetail/itemDetail';\nimport {useState, useEffect} from 'react';\nimport { useParams } from 'react-router-dom';\nimport firestore, { getFirestore } from '../../firebase';\n\n\nconst ItemDetailContainer = () => {\n\n    // declaro el state\n    const [prod, setProd] = useState([]);\n    const db = getFirestore();\n\n    //recibo parametro del id del producto\n    const {idProducto} = useParams();\n\n    // constante es una API\n    // const  products = [\n\n    //     {\n    //         id: 1,\n    //         titulo: 'Bujia',\n    //         category: '1',\n    //         descripcion: 'Resistencia normal',\n    //         precio: 1100,\n    //         stock: 10\n    //     },\n    //     {\n    //         id: 2,\n    //         titulo: 'bujia 2',\n    //         category: '1',\n    //         descripcion: 'Resistencia premiun',\n    //         precio: 600,\n    //         stock: 20\n    //     },\n    //     {\n    //         id: 3,\n    //         titulo: 'Amortiguador',\n    //         category: '2',            \n    //         descripcion: 'Delantero para chevrolet luv',\n    //         precio: 900,\n    //         stock: 30\n    //     },\n    //     {\n    //         id: 4,\n    //         titulo: 'Axial',\n    //         category: '3',            \n    //         descripcion: 'Tren delantero 1',\n    //         precio: 800,\n    //         stock: 40\n    //     },\n    //     {\n    //         id: 5,\n    //         titulo: 'Axial 2',\n    //         category: '3',            \n    //         descripcion: 'Tren delantero 2',\n    //         precio: 1000,\n    //         stock: 50\n    //     }\n    // ];\n\n    // creo una funcion que devuelva una promesa con un delay de 2 segundos\n    // const getProduct = new Promise((resolve, reject)=>{\n    //     setTimeout(()=>{\n    //         const productoDetail = products.find(product => product.id == idProducto);\n    //         //console.log(productoDetail);\n    //             resolve(productoDetail);\n    //     },2000);\n    // });\n\n    // Utilizo el UseEffect para setear el estado prod\n    useEffect(() => {\n\n        console.log('antes de buscar',prod);\n\n            db.collection('productos').doc(idProducto).get()\n            .then(doc => {\n                if(doc.exists){\n                    console.log(doc.data())\n                    setProd(doc.data());\n                }else{\n                    setProd(0);\n                    console.log('no existe el producto', prod);\n                }\n                \n                \n            })\n            .catch(e => console.log(e));\n            console.log('despues de buscar',prod);\n        \n    }, []);\n\n\n    console.log(typeof(prod),'tipo de prod');\n\n    return (\n        <>\n        {\n         prod!='' ? \n        <ItemDetail  item={prod} />\n        :\n        <h5 className=\"col-12 text-center mt-5\" >Cargando Detalle...</h5>\n        }\n        </>\n    )\n};\n\n\nexport default ItemDetailContainer;\n","/Users/sparra/Desktop/solproyect-app/src/Components/NavBar/Navbar.jsx",["81","82","83","84","85"],"import Carro from '../Global/carro';\nimport { Link } from 'react-router-dom';\nimport { useEffect, useState, useContext } from 'react';\nimport {Store} from '../../store';\nimport  {getFirestore} from '../../firebase';\n\nfunction Navbar(imagen){\n\n    const [cate, setCate] = useState([]);\n    const [data,setData] = useContext(Store);\n    const db = getFirestore();\n\n//     const categorias = [\n//         {\n//             id : 1,\n//             nombre : 'Bujias'\n//         },\n//         {\n//             id : 2,\n//             nombre : 'Amortiguadores'\n//         },\n//         {\n//             id : 3,\n//             nombre : 'Axial'\n//         },\n//         {\n//             id : 4,\n//             nombre : 'Accesorios'\n//         },\n//         {\n//             id : 5,\n//             nombre : 'Acc. Portalones'\n//         }          \n// ];\n\n    const getCategoriasFromDB = () =>{\n\n        db.collection('categorias').orderBy(\"nombre\", \"asc\").get()\n        \n        .then(docs => {\n\n            let arra = [];\n            docs.forEach(doc =>{\n                arra.push({id: doc.id, data: doc.data()})\n                console.log(doc.id);\n                console.log(doc.data())\n            })\n\n            setCate(arra);\n\n        })\n        .catch(e => console.log(e))\n    }\n\n    // const getAllCategoria = new Promise((resolve, reject)=>{\n    //     resolve(categorias);\n    // });\n\n\n    useEffect(()=>{\n\n           getCategoriasFromDB(); \n\n        // getAllCategoria.then(resp =>{\n        //     setCate(resp);\n        // });\n\n    },[]);\n\n\n    // const CantEnCarro = () => {\n\n    //     if(data.cantidad==0){\n    //         unmountComponentAtNode(document.getElementById('idcarrito'));\n    //     }\n    // }\n\n    //CantEnCarro();\n\n    return(\n\n        // navbar-dark bg-dark\n        <>\n            <nav className=\"navbar navbar-expand-lg navbar-light navbar-fondo\"> \n                <a className=\"navbar-brand\" href=\"#\"><Link to={'/'}><img src={imagen.src} alt=\"ImagenPrincipal\"/></Link></a>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item dropdown\">\n                        <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        Categorias\n                        </a>\n                        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                            {\n                                cate.map((item, index)=>(\n\n                                    \n                                    <Link key={item.id} className=\"dropdown-item\" to={`/category/${item.data.nombre}`}>{item.data.nombre}</Link>      //+'-'+item.nombre                               \n\n                                ))\n                            }\n                        </div>\n                    </li>\n\n                    </ul>\n                    <Carro/>\n                </div>                \n            </nav>\n        </>\n\n\n    );\n\n\n}\n\n\nexport default Navbar;","/Users/sparra/Desktop/solproyect-app/src/Components/ListProdHome/listadoProdHome.jsx",["86"],"import ItemList from '../ItemList/itemList';\nimport { useParams } from 'react-router-dom';\nimport {useState} from 'react';\n\nconst Listado = ({titulo}) =>{\n\n    const {id} = useParams();\n\n    let titulo2 = id ? id : titulo;\n\n    return(\n\n        <>\n                 <h3 className=\"prodDestacados\">{titulo2}</h3>\n                 <ItemList></ItemList>                \n        </>\n    );\n}\n\nexport default Listado;","/Users/sparra/Desktop/solproyect-app/src/Components/Global/carro.jsx",["87","88"],"import LogoCarro from '../../assets/logo-carro.png';\nimport Widgetcart from '../WidgetCart/WidgetCart';\nimport { useState, useContext } from 'react';\nimport './carro.css';\nimport {Store} from '../../store';\n\n\nfunction Carro(){\n\n    const [data, setData] = useContext(Store);\n\n    const [verWidgetCar, setVerWidgetCar] = useState(false);\n\n    const openWidgetCard = () => {\n\n        setVerWidgetCar(!verWidgetCar);\n\n    }\n\n    return(\n\n        <>\n            <div className={`${data.cantidad > 0 ? 'd-block' : 'd-none'}`}>\n                <div className=\"contador\">\n                    <span>{data.cantidad}</span>\n                </div>\n                <a href=\"#\"><img src={LogoCarro} width=\"30\" onClick={openWidgetCard} alt=\"LogoCarritoCompras\"/></a>\n            </div>\n            <Widgetcart show={verWidgetCar} action={openWidgetCard} />\n\n        </>\n    );\n}\n\n\nexport default Carro;","/Users/sparra/Desktop/solproyect-app/src/Components/ItemList/itemList.jsx",["89","90","91"],"/Users/sparra/Desktop/solproyect-app/src/Components/Product/producto.jsx",["92","93","94","95","96","97"],"import './producto.css';\nimport prod from '../../assets/26000-2A.jpeg';\nimport ItemCount from '../ItemCount/ItemCount';\nimport {useState} from 'react';\nimport {Link} from 'react-router-dom';\n\nfunction Producto({id,nombre,precio,stock,img}){\n\n    //console.log(id);\n\n    const [count, setCount] = useState(1);\n\n    const add = () => {\n\n        //console.log(stock,count);\n\n            if(count<stock){\n                setCount(count + 1);\n            }else{\n                alert('Stock Insuficiente!');\n            }\n    }\n\n    const less = () => {\n\n        if(count>0){\n\n            setCount(count - 1);\n\n        }\n    }\n\n    const CarroAdd = () => {\n\n        alert('Agregado al carro, ' + count +' Unidad(es)');\n\n    }\n\n    return(\n\n        <>\n           <div className=\"col-12 col-sm-6 col-md-6 col-lg-4 col-xl-3\">\n            <div className=\"card anchoCard\" >\n                <Link to={`/detail/${id}`}><img className=\"card-img-top\" src={`../../../images/${img}`} alt=\"Card image cap\"/></Link>\n                <div className=\"card-body\">\n                <h5 className=\"card-title\">{nombre}  ${precio}</h5>\n                    <p className=\"card-text\">Stock : {stock}</p>\n                    {/* <a href=\"#!\" className=\"btn btn-outline-primary btn-sm btn-block\" onClick={() => CarroAdd()}>Agregar al carro</a> */}\n                    <Link to={`/detail/${id}`} className=\"btn btn-outline-primary btn-sm btn-block\">Ver detalle</Link>\n                </div>\n            </div>\n          </div>\n        </>\n\n    );\n\n}\n\nexport default Producto;","/Users/sparra/Desktop/solproyect-app/src/Components/ItemCount/ItemCount.jsx",[],"/Users/sparra/Desktop/solproyect-app/src/Components/WidgetCart/WidgetCart.jsx",[],"/Users/sparra/Desktop/solproyect-app/src/Components/ItemDetail/itemDetail.jsx",["98","99","100","101"],"import './itemDetail.css';\nimport { useEffect, useState, useContext } from 'react';\nimport {Link, useParams} from 'react-router-dom';\nimport { useHistory } from \"react-router-dom\";\nimport ItemCount from '../ItemCount/ItemCount';\nimport {Store} from '../../store';\n\nconst ItemDetail = (prod) =>{\n\n    console.log('producto por prod',prod);\n\n    // Context \n    const [data, setData] = useContext(Store);\n\n\n    // estado    \n    const [count, setCount] = useState(1);\n\n    const add = () => {\n\n        //console.log(stock,count);\n\n            if(count<prod.item.stock){\n                setCount(count + 1);\n            }else{\n                alert('Stock Insuficiente!');\n            }\n    }\n\n    const less = () => {\n\n        if(count>0){\n\n            setCount(count - 1);\n\n        }\n    }\n\n    // function para agregar al carro\n    const CarroAdd = () => { \n\n        //valido si existe el producto\n        if(existeProd()){\n            //function para buscar el index del item repetido del carro\n            const encontro = (item) => item.item.id == prod.item.id;\n            const indiceItem = data.items.findIndex(encontro);\n            //modifico el atributo cantidad en carro del item repetido a agregar\n            data.items[indiceItem].item.cantidadEnCarro = data.items[indiceItem].item.cantidadEnCarro + count;\n\n            //seteo cantidad general y piso el array items para actualizar las unidades del producto agregado\n            setData({\n                ...data,\n                cantidad: data.cantidad + count,\n                items: data.items\n            }); \n\n        }else{\n\n            // si no existe, agrego cantidad inicial del producto agregado al carro\n            prod.item.cantidadEnCarro = count;     \n\n            // seteo el valor de la cantidad y agrego el item al carro\n            setData({\n                ...data,\n                cantidad: data.cantidad + count,\n                items: [...data.items,prod]\n            });            \n            \n        }\n    } \n    \n    // function para saber si existe el producto en el carro\n    const existeProd = () => {\n        const buscaProd = data.items.find(item => item.item.id == prod.item.id);\n        if(buscaProd){\n            return true;\n        }else{\n            return false;\n        }\n    }\n    \n    //console.log(data);\n\n       //console.log(prod.item);\n        \n       //const history = useHistory();\n\n    //    function activateLasers() {\n    //        alert('Producto Agregardo');\n    //      history.push(\"/cart\");\n    //    }\n\n\n\n        // recibir parametro enviado por la ruta\n       const {id} = useParams();\n\n       useEffect(() => {\n        console.log(id);\n\n       }, [id]);\n\n    return (\n\n\n\n        // Detalle del producto (ficha de presentacion)\n        <>\n       \n        <div className=\"container\">\n            <div className=\"row mt-4\">\n                <div className=\"col-8 text-center\">\n                    <img src={`../../../images/${prod.item.img}`} width=\"500\" />\n\n                </div>\n                <div className=\"col-4\">\n                    <div className=\"row\">\n                        <div className=\"col-12 text-center mt-5\">\n                            <span className=\"titulo\">{prod.item.titulo} </span>\n\n                        </div>                        \n                        <div className=\"col-12 mt-4\">\n                            <span className=\"precio\">Precio: <span className=\"precioValor\">$ {prod.item.precio}</span> </span>\n\n                        </div>\n                        <div className=\"col-12 mt-3\">\n                            <span className=\"descripcion\">Descripcion : \n                                <span className=\"descripcionTexto\">\n                                    {prod.item.descripcion}\n                                </span>\n                            </span>\n\n                        </div>\n                        <div className=\"col-12 mt-3\">\n                            <ItemCount\n                            count={count}\n                            add={add}\n                            less={less}\n                            />\n                            <button className=\"btn btn-outline-primary btn-sm btn-block\" onClick={CarroAdd}>Agregar al Carro</button>\n                            \n                        </div>                        \n                        <div className=\"col-12 mt-3\">\n                            <Link to={'/'} className=\"btn btn-outline-danger btn-sm btn-block\">Volver</Link>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n\n        </>\n    );\n}\n\nexport default ItemDetail;",{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":8,"column":12,"nodeType":"108","messageId":"109","endLine":8,"endColumn":17},{"ruleId":"106","severity":1,"message":"110","line":8,"column":19,"nodeType":"108","messageId":"109","endLine":8,"endColumn":27},{"ruleId":"111","severity":1,"message":"112","line":36,"column":32,"nodeType":"113","messageId":"114","endLine":36,"endColumn":34},{"ruleId":"106","severity":1,"message":"115","line":9,"column":11,"nodeType":"108","messageId":"109","endLine":9,"endColumn":14},{"ruleId":"111","severity":1,"message":"112","line":29,"column":32,"nodeType":"113","messageId":"114","endLine":29,"endColumn":34},{"ruleId":"106","severity":1,"message":"116","line":4,"column":8,"nodeType":"108","messageId":"109","endLine":4,"endColumn":17},{"ruleId":"117","severity":1,"message":"118","line":90,"column":8,"nodeType":"119","endLine":90,"endColumn":10,"suggestions":"120"},{"ruleId":"121","severity":1,"message":"122","line":98,"column":14,"nodeType":"123","messageId":"124","endLine":98,"endColumn":16},{"ruleId":"106","severity":1,"message":"125","line":10,"column":12,"nodeType":"108","messageId":"109","endLine":10,"endColumn":16},{"ruleId":"106","severity":1,"message":"126","line":10,"column":17,"nodeType":"108","messageId":"109","endLine":10,"endColumn":24},{"ruleId":"117","severity":1,"message":"127","line":68,"column":7,"nodeType":"119","endLine":68,"endColumn":9,"suggestions":"128"},{"ruleId":"129","severity":1,"message":"130","line":85,"column":17,"nodeType":"131","endLine":85,"endColumn":54},{"ruleId":"129","severity":1,"message":"130","line":93,"column":25,"nodeType":"131","endLine":93,"endColumn":174},{"ruleId":"106","severity":1,"message":"132","line":3,"column":9,"nodeType":"108","messageId":"109","endLine":3,"endColumn":17},{"ruleId":"106","severity":1,"message":"126","line":10,"column":18,"nodeType":"108","messageId":"109","endLine":10,"endColumn":25},{"ruleId":"129","severity":1,"message":"130","line":27,"column":17,"nodeType":"131","endLine":27,"endColumn":29},{"ruleId":"106","severity":1,"message":"116","line":4,"column":8,"nodeType":"108","messageId":"109","endLine":4,"endColumn":17},{"ruleId":"117","severity":1,"message":"133","line":61,"column":8,"nodeType":"119","endLine":61,"endColumn":12,"suggestions":"134"},{"ruleId":"121","severity":1,"message":"135","line":135,"column":39,"nodeType":"123","messageId":"124","endLine":135,"endColumn":41},{"ruleId":"106","severity":1,"message":"136","line":2,"column":8,"nodeType":"108","messageId":"109","endLine":2,"endColumn":12},{"ruleId":"106","severity":1,"message":"137","line":3,"column":8,"nodeType":"108","messageId":"109","endLine":3,"endColumn":17},{"ruleId":"106","severity":1,"message":"138","line":13,"column":11,"nodeType":"108","messageId":"109","endLine":13,"endColumn":14},{"ruleId":"106","severity":1,"message":"139","line":24,"column":11,"nodeType":"108","messageId":"109","endLine":24,"endColumn":15},{"ruleId":"106","severity":1,"message":"140","line":33,"column":11,"nodeType":"108","messageId":"109","endLine":33,"endColumn":19},{"ruleId":"141","severity":1,"message":"142","line":44,"column":44,"nodeType":"131","endLine":44,"endColumn":127},{"ruleId":"106","severity":1,"message":"143","line":4,"column":10,"nodeType":"108","messageId":"109","endLine":4,"endColumn":20},{"ruleId":"121","severity":1,"message":"135","line":45,"column":53,"nodeType":"123","messageId":"124","endLine":45,"endColumn":55},{"ruleId":"121","severity":1,"message":"135","line":74,"column":64,"nodeType":"123","messageId":"124","endLine":74,"endColumn":66},{"ruleId":"144","severity":1,"message":"145","line":113,"column":21,"nodeType":"131","endLine":113,"endColumn":81},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"no-unused-vars","'total' is assigned a value but never used.","Identifier","unusedVar","'setTotal' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'app' is assigned a value but never used.","'firestore' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'db', 'idProducto', and 'prod'. Either include them or remove the dependency array.","ArrayExpression",["148"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCategoriasFromDB'. Either include it or remove the dependency array.",["149"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'getProductsFromDB', 'getProductsFromDBCategory', and 'items'. Either include them or remove the dependency array.",["150"],"Expected '===' and instead saw '=='.","'prod' is defined but never used.","'ItemCount' is defined but never used.","'add' is assigned a value but never used.","'less' is assigned a value but never used.","'CarroAdd' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'useHistory' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},"Update the dependencies array to be: [db, idProducto, prod]",{"range":"157","text":"158"},"Update the dependencies array to be: [getCategoriasFromDB]",{"range":"159","text":"160"},"Update the dependencies array to be: [getProductsFromDB, getProductsFromDBCategory, id, items]",{"range":"161","text":"162"},[2607,2609],"[db, idProducto, prod]",[1535,1537],"[getCategoriasFromDB]",[1592,1596],"[getProductsFromDB, getProductsFromDBCategory, id, items]"]